name: build

on: [push, pull_request]

env:
  PYTEST_ADDOPTS: "--color=yes"

jobs:
  test:
    name: Test - ${{ matrix.config.python }} - ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}-latest

    strategy:
      matrix:
        config:
          - os: ubuntu
            python: "3.8"
          - os: ubuntu
            python: "3.9"
          - os: ubuntu
            python: "3.10"
          - os: ubuntu
            python: "3.11"
          - os: macos
            python: "3.x"
          - os: windows
            python: "3.x"

    steps:
      - uses: actions/checkout@v3
      - name: Install Poetry
        run: pipx install poetry
      - name: Set up Python ${{ matrix.config.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.config.python }}
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run invoke tests


  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run invoke lint --diff


  deploy:
    name: Deploy
    environment: Deployment
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: ${{ github.ref=='refs/heads/master' && github.event_name!='pull_request' }}

    steps:
      - uses: actions/checkout@v3
      - name: Install Poetry
        run: pipx install poetry
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install --with deploy
      - name: Check release
        id: check_release
        run: echo "##[set-output name=release;]$(poetry run autopub check)"
      - name: Publish
        if: ${{ steps.check_release.outputs.release=='' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          git remote set-url origin https://$GITHUB_TOKEN@github.com/${{ github.repository }}
          poetry run autopub prepare
          poetry build
          poetry run autopub commit
          poetry run autopub githubrelease
          poetry publish -u __token__ -p $PYPI_PASSWORD
